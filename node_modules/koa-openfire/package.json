{
  "name": "koa-openfire",
  "version": "0.0.1",
  "description": "A koa middleware to build web IM with openfire",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "keywords": [
    "koa",
    "middleware",
    "openfire",
    "xmpp"
  ],
  "author": {
    "name": "skyinlayer"
  },
  "license": "MIT",
  "dependencies": {
    "raw-body": "^1.3.0",
    "underscore": "^1.6.0",
    "xml2js": "^0.4.4"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/LingyuCoder/koa-openfire.git"
  },
  "bugs": {
    "url": "https://github.com/LingyuCoder/koa-openfire/issues"
  },
  "homepage": "https://github.com/LingyuCoder/koa-openfire",
  "readme": "koa-openfire\r\n===\r\nA middleware to build web IM with Openfire\r\n\r\nUsage\r\n---\r\nFirst, you should have startup an Openfire server. You can download Openfire from [Ignite Realtime](http://www.igniterealtime.org/projects/openfire/) or [Github](https://github.com/igniterealtime/Openfire). If you startup it at `192.168.0.123`, you can set koa-openfire like this. Then your application can send xmpp xml message to `http://localhost/JHB/`\r\n\r\n```javascript\r\nvar koa = require('koa');\r\nvar serve = require('koa-static');\r\nvar openfire = require('koa-openfire');\r\nvar app = koa();\r\n\r\napp.use(openfire({\r\n\thost: '192.168.0.123',\r\n\tport: 7070,\r\n\tpath: '/http-bind/',\r\n\tmethod: 'POST',\r\n\tlisten: '/JHB/'\r\n}));\r\n\r\napp.use(serve('.'));\r\napp.listen(3000);\r\n```\r\n\r\nOptions\r\n---\r\n###host\r\ndefault: `127.0.0.1`\r\n\r\nThe host of your Openfire server.\r\n\r\n###port\r\ndefault: `7070`\r\n\r\nThe port of your Openfire bosh server. If you have startuped an Openfire, you can go `[openfire's host]:9090` to check which port the bosh server is using.\r\n\r\n###path\r\ndefault: `http-bind`\r\n\r\nThe path of your Openfire bosh server.\r\n\r\n###method\r\ndefault: `post`\r\n\r\nThe http method to send message to your Openfire bosh server.\r\n\r\n###listen\r\ndefault: `/JHB/`\r\n\r\nThe path which need to be deal with. If your set it like `/xmpp/`, then your web application should send all XMPP messages to `/xmpp/`. Otherwise, this middleware will ignore those messages.\r\n\r\nLicense\r\n---\r\nMIT",
  "readmeFilename": "README.md",
  "_id": "koa-openfire@0.0.1",
  "_shasum": "fa0dc2044d36ec29dcbad86cae05733b00c2d792",
  "_from": "koa-openfire@"
}
